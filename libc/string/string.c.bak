# include <string.h>
# include <stdlib.h>

char* strcpy(char* dest, const char* src)
{
	while(*src)
		*(dest++) = *(src++) ;
	*dest = '\0' ;
	return dest ;
}

int strcmp(const char* s1, const char* s2)
{
	while(*s1 && *s2)
	{
		if(*s1++ != *s2++)
			return *s1 < *s2 ? -1 : +1 ;
	}

	if(!(*s1) && !(*s2))
		return 0 ;

	return !(*s1) ? -1 : +1 ;
}

int strncmp(const char* s1, const char* s2, int len)
{
	int i = 0 ;

	while(*s1 && *s2)
	{
		if(*s1++ != *s2++)
			return *s1 < *s2 ? -1 : +1 ;

		i++ ;
		if(i == len)
			break ;
	}

	if(!(*s1) && !(*s2))
		return 0 ;

	return !(*s1) ? -1 : +1 ;
}

const char* strchr(const char* s, char ch)
{
	while(*s)
	{
		if(*s == ch)
			return s ;
		*s++ ;
	}

	return NULL ;
}

char* strcat(char* s1, const char* src)
{
	strcpy(s1 + strlen(s1), src) ;
	return s1 ;
}

int strlen(const char* s1)
{
	int i = 0 ;
	while(*s1++) i++ ;
	return i ;
}

void ltrim(char* s1)
{
	int i = 0 ;

	while(iswhitespace(s1[i])) i++ ;

	if(i == 0)
		return ;

	strcpy(s1, s1 + i) ;
}

void rtrim(char* s1)
{	
	int i = strlen(s1) - 1 ;

	while(!iswhitespace(s1[i])) i-- ;
	
	s1[i + 1] = '\0' ;
}

void strtok(const char* src, char chToken, tok_copy_func* tc_copy, int* iListSize)
{
    int index ;
    int iStartIndex = 0 ;
    int iTokenIndex = 0 ;

    for(index = 0; src[index] != '\0'; index++)
    {
        if(src[index] == chToken)
        {
            if((index - iStartIndex) > 0)
            {
				tc_copy(iTokenIndex, src + iStartIndex, (index - iStartIndex)) ;
                iTokenIndex++ ;
            }

            iStartIndex = index + 1 ;
        }
    }

    if((index - iStartIndex) > 0)
    {
		tc_copy(iTokenIndex, src + iStartIndex, (index - iStartIndex)) ;
        iTokenIndex++ ;
    }

    *iListSize = iTokenIndex ;
}

void strtok_c(const char* src, 
			tok_compare_func* tc_tok_func, 
			tok_group_func* tc_group_func, 
			tok_copy_func* tc_copy, 
			int* iListSize) 
{
    int index ;
    int iStartIndex = 0 ;
    int iTokenIndex = 0 ;
	byte bGroupStarted = false ;

    for(index = 0; src[index] != '\0'; index++)
    {
		if(tc_group_func(src[index]))
		{
            if((index - iStartIndex) > 0)
            {
				tc_copy(iTokenIndex, src + iStartIndex, (index - iStartIndex)) ;
                iTokenIndex++ ;
            }

			if(!bGroupStarted)
				bGroupStarted = true ;
			else
				bGroupStarted = false ;
			
			iStartIndex = index + 1 ;
			continue ;
		}

		if(bGroupStarted)
			continue ;

        if(tc_tok_func(src[index]))
        {
            if((index - iStartIndex) > 0)
            {
				tc_copy(iTokenIndex, src + iStartIndex, (index - iStartIndex)) ;
                iTokenIndex++ ;
            }

            iStartIndex = index + 1 ;
        }
    }

    if((index - iStartIndex) > 0)
    {
		tc_copy(iTokenIndex, src + iStartIndex, (index - iStartIndex)) ;
        iTokenIndex++ ;
    }

    *iListSize = iTokenIndex ;
}
